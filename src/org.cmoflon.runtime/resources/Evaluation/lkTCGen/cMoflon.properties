#Set to 'true' if dropping unidirectional edges is desired 
tc.dropUnidirectionalEdges = true
# Set to True if you want to use hopcounts.
tc.enableHopcountProcess = true
# Set number of matches allowed per foreach invocation
pm.maxmatches = 20
# Place the names of the topology control algorithms to use as CSV (e.g., tcMethods=KtcAlgorithm,LStarKtcAlgorithm)
tc.algorithms = LStarKtcAlgorithm
# Place the parameters for the topology control algorithm call here as CSV
# (e.g., parametersOf.LStarKtcAlgorithm=const-k,1.5# It is also possible to define constants. A constant declaration must look as follows: const-[constname]
tc.parametersOf.LStarKtcAlgorithm=const-k, const-stretchFactor
# (e.g., const-k=3.0)
const-k = 1.2
const-stretchFactor=1.5
const-broadcasthopcount_immediate_max = 10 
const-broadcasthopcount_immediate_min = 1
const-broadcasthopcount_smalldelay_min = 55
const-broadcasthopcount_smalldelay_max = 65
const-broadcasthopcount_periodic_min = 270
const-broadcasthopcount_periodic_max = 330

#  Type mapping definitions follow 
# The Key is the EClass, and the value is the C Struct you want it to be mapped to.
# Default: mappingOf.Node = networkaddr_t and mappingOf.Link = neighbor_t
mappingOf.Node = networkaddr_t
mappingOf.Link = neighbor_t
