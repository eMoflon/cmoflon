VariableName(variable) ::= <<
<first(variable.parameters).specification.name; format="lowercase">
>>

VariableTypeAndName(variable, importManager) ::= <<
<importManager.(variable.type.typeName)> <VariableName(variable)>
>>

AllMatches(engine, importManager, body, chain) ::= <<
result.add(new <importManager.("org.gervarro.democles.common.GenericDataFrame")>(<if (body.localVariables)><length(body.header.internalSymbolicParameters)>, <endif><[body.header.internalSymbolicParameters, body.internalLocalVariables]:VariableName(); separator=", ">));
>> 

SingleMatch(engine, importManager, body, chain) ::= <<
return new <importManager.("org.gervarro.democles.common.GenericDataFrame")>(<if (body.localVariables)><length(body.header.internalSymbolicParameters)>, <endif><[body.header.internalSymbolicParameters, body.internalLocalVariables]:VariableName(); separator=", ">);
>>

MatchSingleMethod(engine, importManager, body, adornment, boundSymbolicParameters, chain) ::= <<
public final <importManager.("org.gervarro.democles.common.GenericDataFrame")> matchSingle<body.header.name; format="uppercase"><adornment>(<boundSymbolicParameters:VariableTypeAndName(importManager); separator=", ">) {
  <(chain.value.template)(engine, importManager, body, chain)>
  return null;
}
>>

MatchAllMethod(engine, importManager, body, adornment, boundSymbolicParameters, chain) ::= <<
public final <importManager.("java.lang.Iterable")>\<<importManager.("org.gervarro.democles.common.GenericDataFrame")>\> matchAll<body.header.name; format="uppercase"><adornment>(<boundSymbolicParameters:VariableTypeAndName(importManager); separator=", ">) {
  <importManager.("java.util.LinkedList")>\<<importManager.("org.gervarro.democles.common.GenericDataFrame")>\> result =
    new <importManager.("java.util.LinkedList")>\<<importManager.("org.gervarro.democles.common.GenericDataFrame")>\>();
  <(chain.value.template)(engine, importManager, body, chain)>
  return result;
}
>>